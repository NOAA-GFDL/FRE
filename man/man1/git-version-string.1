'\" t
.\"     Title: git-version-string
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 12/09/2014
.\"    Manual: FRE Utility
.\"    Source: FRE Bronx-9
.\"  Language: English
.\"
.TH "GIT\-VERSION\-STRING" "1" "12/09/2014" "FRE Bronx\-9" "FRE Utility"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-version-string \- Prints the git status of a file
.SH "SYNOPSIS"
.sp
.nf
git version\-string [<options>\&...] <file>
.fi
.SH "DESCRIPTION"
.sp
\fBgit\-version\-string\fR reports on the git status of a file\&. The string returned can be used in a CPP macro to set the file\(cqs version in the compiled source code, as in the following compile example:
.sp
.if n \{\
.RS 4
.\}
.nf
f90 \-D_VERSION=`git version\-string foo\&.F90` \-c foo\&.F90
.fi
.if n \{\
.RE
.\}
.sp
or in a Makefile:
.sp
.if n \{\
.RS 4
.\}
.nf
foo\&.o : foo\&.F90
     $(F90) \-D_VERSION=$(shell git version\-string foo\&.F90) \-c foo\&.F90
.fi
.if n \{\
.RE
.\}
.SH "OPTIONS"
.PP
\fB\-h\fR
.RS 4
Print the usage message
.RE
.SH "OUTPUT"
.sp
\fBgit\-version\-string\fR will always print a string indicating the "known" status of a file to standard out\&. The possible status lines are:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
An unmodified file will only have the commit hash printed\&.
.sp
.if n \{\
.RS 4
.\}
.nf
Example: ref:f6a0f81
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
A modified file will have the commit hash printed, a status string, and the modified object hash\&.
.sp
.if n \{\
.RS 4
.\}
.nf
Example: ref:f6a0f81 status:Modified blob:e50efe074c09a81d9041222a9976b4ef87758265
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
If the file is not in a git repository, or if any error occurs, the string returned will be "UNKNOWN"\&. If possible, the hash of the blob will also be printed\&.
.sp
.if n \{\
.RS 4
.\}
.nf
Example: status:UNKNOWN
         status:UNKNOWN blob:d86bac9de59abcc26bc7956c1e842237c7581859
.fi
.if n \{\
.RE
.\}
.RE
.sp
If \fBgit\-version\-string\fR encounters any errors, the status line in 3 will still be printed, along with an error message to stdout, and in some cases will have a non\-zero exit status\&.
.sp
To use with mkmf, use the following invocation:
.sp
mkmf \-t make_template \-p foo \-c \fI\-D_VERSION="\fR\fIgit version\-string $<\fR\fI"\fR path_names
.sp
That will add the following CPPDEFS make macro to the makefile:
.sp
CPPDEFS = \-d_VERSION="git version\-string $<"
.SH "AUTHOR"
.sp
Written by Seth Underwood <Seth\&.Underwood@noaa\&.gov>
