#!/bin/csh -f
#
# ------------------------------------------------------------------------------
# FMS/FRE Project: Post-Processor Starter - GFDL Version
# ------------------------------------------------------------------------------
# Copyright (C) NOAA Geophysical Fluid Dynamics Laboratory, 2000-2011, 2015
# Designed and written by V. Balaji, Amy Langenhorst, Aleksey Yakovlev and
# Seth Underwood
#


  set -r echoOn = $?echo
  set -r runtimeBeg = `date "+%s"`

  if ( $echoOn ) unset echo
  echo "<NOTE> : ====== FRE POST-PROCESSOR STARTER ======"
  echo "<NOTE> : Starting at $HOST on `date`"
  if ( $echoOn ) set echo

  unalias *

  # ---------------- define constants depending on the run type

  if ( $?SLURM_JOB_ID ) then
    tty -s
    if ($status) then
      set -r batch
    endif
    set -r job_id = $SLURM_JOB_ID
  else
    set -r job_id = INTERACTIVE
  endif

################################################################################
#----------------------------- dummy files removal -----------------------------
################################################################################

  if ( $?batch ) then
    rm -f dummy.txt.*
  endif

################################################################################
#------------------------ arguments initial assignment -------------------------
################################################################################

  if ( $?batch && $# == 0 ) then

    if ( $?expName ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : expName = '$expName'"
      if ( $echoOn ) set echo
      set -r expName = $expName
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'expName' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?xmlFile ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : xmlFile = '$xmlFile'"
      if ( $echoOn ) set echo
      set -r xmlFile = $xmlFile
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'xmlFile' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?platform ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : platform = '$platform'"
      if ( $echoOn ) set echo
      set -r platform = $platform
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'platform' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?target ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : target = '$target'"
      if ( $echoOn ) set echo
      set -r target = $target
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'target' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?firstDate ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : firstDate = '$firstDate'"
      if ( $echoOn ) set echo
      set -r firstDate = $firstDate
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'firstDate' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?freVersion ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : freVersion = '$freVersion'"
      if ( $echoOn ) set echo
      set -r freVersion = $freVersion
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'freVersion' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?mppnccombineOptString ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : mppnccombineOptString = '$mppnccombineOptString'"
      if ( $echoOn ) set echo
      set -r mppnccombineOptString = "$mppnccombineOptString"
    else
      set -r mppnccombineOptsDefault = '-64 -h 16384 -m'
      if ( $echoOn ) unset echo
      echo "WARNING: mppnccombineOptString not found, defaulting to '$mppnccombineOptsDefault'"
      if ( $echoOn ) set echo
      set -r mppnccombineOptString = "$mppnccombineOptsDefault"
    endif

    if ( $?mailList ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : mailList = '$mailList'"
      if ( $echoOn ) set echo
      set -r mailList = $mailList
      set -r mailListOption = "--mail-list=$mailList"
    else
      if ( $echoOn ) unset echo
      echo "<NOTE> : The argument 'mailList' is not defined, so it won't be passed to frepp"
      if ( $echoOn ) set echo
      set -r mailList = $USER@noaa.gov
      set -r mailListOption = ""
    endif

  else if ( $# > 0 ) then

    alias getopt `which getopt` --shell=tcsh --unquote

    set argv = ( `getopt 'x:P:T:d:t:D:E:F:C:' $*` )
    set argvStatus = $status

    set expName = ""
    set xmlFile = ""
    set platform = ""
    set target = ""
    set firstDate = ""
    set freVersion = ""
    set mppnccombineOptString = '-64 -h 16384 -m'
    set mailList = $USER@noaa.gov
    set mailListOption = ""

    while ( 1 )
      switch ( $argv[1] )
	case --:
	  shift argv; break;
	case -x:
	  set xmlFile = $argv[2]; shift argv; breaksw;
	case -P:
	  set platform = $argv[2]; shift argv; breaksw;
	case -T:
	  set target = $argv[2]; shift argv; breaksw;
	case -t:
	  set firstDate = $argv[2]; shift argv; breaksw;
	case -F:
	  set freVersion = $argv[2]; shift argv; breaksw;
        case -C:
          set mppnccombineOptString = "$argv[2]"; shift argv; breaksw;
	default:
	  if ( $echoOn ) unset echo
	  echo "*ERROR*: System error"
	  if ( $echoOn ) set echo
	  exit 1
      endsw
      shift argv
    end

    if ( $argvStatus || $#argv != 1 ) then
      if ( $echoOn ) unset echo
      echo "*ERROR*: Invalid options or not a single experiment name on a command line..."
      if ( $echoOn ) set echo
      set -r commandLineError
    else
      set -r expName = $argv[1]
      set -r xmlFile = $xmlFile
      set -r platform = $platform
      set -r target = $target
      set -r firstDate = $firstDate
      set -r freVersion = $freVersion
      set -r mppnccombineOptString = "$mppnccombineOptString"
    endif

    unset argvStatus
    unset argv

  else

    set -r commandLineError

  endif

  if ( $?commandLineError ) then

    if ( $echoOn ) unset echo
    echo "Usage: $0:t [options] experiment"
    echo "  -x STRING - XML file absolute pathname STRING"
    echo "  -P STRING - platform STRING"
    echo "  -T STRING - target STRING"
    echo "  -t STRING - first date STRING"
    echo "  -F STRING - use freVersion STRING to extract platform csh section"
    if ( $echoOn ) set echo

    exit 1

  endif

################################################################################
#----------------------------- environment setup -------------------------------
################################################################################

  # Set the default umask of 022, which can be overridden in the platform cshell
  umask 022

  # Use the freVersion to extract and load the platform/csh section.
  if ( $echoOn ) unset echo
  csh -c "source ${MODULESHOME}/init/csh; module load fre/${freVersion}; frelist --platform=${platform} --target=${target} --platform-csh --xmlfile=${xmlFile} ${expName}" | source /dev/stdin
  if ( $status != 0 ) then
    echo "*ERROR*: Unable to extract //setup/platform[@name='${platform}'/csh section from xml '${xmlFile}'"
    exit 1
  endif
  if ( $echoOn ) set echo

  # Get the archive directory using frelist, and verify it
  # exists and is a directory
  set -r historyDir = "`frelist --directory=archive --platform=${platform} --target=${target} --xmlfile=${xmlFile} ${expName}`/history"
  if ( $status != 0 ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: Unable to determine the archive directory for experiment '${expName}' in xml '${xmlFile}'"
    if ( $echoOn ) set echo
    exit 1
  else if ( ! -d ${historyDir} ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: Archive directory '${historyDir}' does not exist or isn't a directory"
    if ( $echoOn ) set echo
    exit 1
  endif

  # Get the PTMP directory using frelist, and verify it exists and is a directory
  set -r ptmpDir = `frelist --directory=ptmp --platform=${platform} --target=${target} --xmlfile=${xmlFile} ${expName}`
  if ( $status != 0 ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: Unable to determine the PTMP directory for experiment '${expName}' in xml '${xmlFile}'"
    if ( $echoOn ) set echo
    exit 1
  else if ( ! -d ${ptmpDir} ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: PTMP directory '${ptmpDir}' does not exist or isn't a directory"
    if ( $echoOn ) set echo
    exit 1
  endif

################################################################################
#------------------------ global constants and aliases -------------------------
################################################################################

  alias pp `which frepp | sed -e 's/.* //'` -v -c split -s --mppnccombine-opts=\'$mppnccombineOptString\'

  # Check if using an older fre-commands/bronx version that does not 
  # have mppnccombine-opts in frepp.
  set fre_version = ( ${FRE_COMMANDS_VERSION:as/-/ /} )
  if ( $#fre_version > 1 ) then
    if ( $fre_version[1] =~ "bronx" && $fre_version[2] < 11 ) then
      # mppnccombine-opts is not available in this version of FRE
      alias pp `which frepp | sed -e 's/.* //'` -v -c split -s
    endif
  endif
  unset fre_version

################################################################################
#------------------------ stage history files to PTMP --------------------------
################################################################################
  # By frepp conventions, if the date string is 6 chars or less, it's a year.
  # Otherwise it includes month and day, MMDD.
  if (`echo $firstDate | awk '{print length($0)}'` < 7) then
      set year = `printf "%04d" $firstDate`
  else
      set year = `echo $firstDate | sed 's/[0-9][0-9][0-9][0-9]$//'`
  endif
  foreach historyfile ( `ls $historyDir/$year????.nc.tar` )
    # We want to stage the history files to PTMP without transferring to VFTMP.
    # Calling hsmget on a file with wildards that doesn't exist does this,
    # e.g. "dummy*" as below, but prints a warning.
    time hsmget -v -t -a $historyDir -p $ptmpDir$historyDir -w $TMPDIR$historyDir $historyfile:t:r/dummy\*
    if ( $status == 0 ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : History files in $historyfile have been staged to PTMP successfully"
      if ( $echoOn ) set echo
    else
      if ( $echoOn ) unset echo
      echo "WARNING: During history file ($historyfile) staging to PTMP, hsmget reported failure. Retrying..."
      if ( $echoOn ) set echo
      time hsmget -v -t -a $historyDir -p $ptmpDir$historyDir -w $TMPDIR$historyDir $historyfile:t:r/dummy\*
      if ( $status == 0 ) then
        if ( $echoOn ) unset echo
        echo "<NOTE> : History files in $historyfile have been staged to PTMP successfully"
        if ( $echoOn ) set echo
      else
        if ( $echoOn ) unset echo
        echo "*ERROR*: Can't stage history files in $historyfile to PTMP"
        if ( $echoOn ) set echo
        set -r stdoutDir = `frelist --directory=stdout --platform=${platform} --target=${target} --xmlfile=${xmlFile} ${expName}`/postProcess
        Mail -s "$expName year $year cannot be postprocessed" $mailList <<END
Your FRE post-processing starter job ($job_id) has exited because of a data transfer failure.

It can be restarted via:

$0 -x $xmlFile -P $platform -T $target -F $freVersion -t $firstDate $expName

Job details:
$expName running on $HOST
Batch job stdout directory:
$stdoutDir
END
        exit 1
      endif
    endif
  end

################################################################################
#--------------------------- the post-processor call ---------------------------
################################################################################

  if ( ! $echoOn ) set echo

  # Cross-site submit from gaea has group ID 500, not the user's primary group
  # Get the user's primary group
  set correctGroup = `id -gn $user`
  if ( $correctGroup == "" ) then
    echo "ERROR: Could not determine user id!"
    exit 1
  endif
  # Then run frepp under the user's primary group using sg
  # The -D '' is required for compatability with older fre-commands/bronx versions
  sg $correctGroup "`alias pp` -D '' -x $xmlFile -P $platform -T $target -d $historyDir -t $firstDate $mailListOption $expName"

  if ( $status == 0 ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : The post-processor has been started successfully"
    if ( $echoOn ) set echo
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: Can't start the post-processor"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( ! $echoOn ) unset echo

################################################################################
#----------------------------- normal end of script ----------------------------
################################################################################

  set -r runtimeEnd = `date "+%s"`
  set -r runtime = `echo "$runtimeEnd - $runtimeBeg" | bc -l`

  if ( $echoOn ) unset echo
  echo "<NOTE> : Finishing on `date`"
  echo "<NOTE> : Runtime = '$runtime' (seconds)"
  echo "<NOTE> : Natural end of the post-processing starter script for '$expName'"
  if ( $echoOn ) set echo

  exit 0
