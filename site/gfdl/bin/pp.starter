#!/bin/csh -f
#
# ------------------------------------------------------------------------------
# FMS/FRE Project: Post-Processor Starter - GFDL Version
# ------------------------------------------------------------------------------
# Copyright (C) NOAA Geophysical Fluid Dynamics Laboratory, 2000-2011, 2015
# Designed and written by V. Balaji, Amy Langenhorst, Aleksey Yakovlev and
# Seth Underwood
#

  set -r echoOn = $?echo
  set -r runtimeBeg = `date "+%s"`

  if ( $echoOn ) unset echo
  echo "<NOTE> : ====== FRE POST-PROCESSOR STARTER ======"
  echo "<NOTE> : Starting at $HOST on `date`"
  if ( $echoOn ) set echo

  unalias *

  # ---------------- define constants depending on the run type

  if ( $?PBS_ENVIRONMENT ) then
    if ( $PBS_ENVIRONMENT == 'PBS_BATCH' ) then
      set -r batch
    endif
  endif

################################################################################
#----------------------------- dummy files removal -----------------------------
################################################################################

  if ( $?batch ) then
    rm -f dummy.txt.*
  endif

################################################################################
#------------------------ arguments initial assignment -------------------------
################################################################################

  if ( $?batch && $# == 0 ) then

    if ( $?expName ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : expName = '$expName'"
      if ( $echoOn ) set echo
      set -r expName = $expName
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'expName' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?xmlFile ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : xmlFile = '$xmlFile'"
      if ( $echoOn ) set echo
      set -r xmlFile = $xmlFile
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'xmlFile' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?platform ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : platform = '$platform'"
      if ( $echoOn ) set echo
      set -r platform = $platform
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'platform' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?target ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : target = '$target'"
      if ( $echoOn ) set echo
      set -r target = $target
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'target' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?firstDate ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : firstDate = '$firstDate'"
      if ( $echoOn ) set echo
      set -r firstDate = $firstDate
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'firstDate' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?freVersion ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : freVersion = '$freVersion'"
      if ( $echoOn ) set echo
      set -r freVersion = $freVersion
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'freVersion' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif

    if ( $?mppnccombineOptString ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : mppnccombineOptString = '$mppnccombineOptString'"
      if ( $echoOn ) set echo
      set -r mppnccombineOptString = "$mppnccombineOptString"
    else
      set -r mppnccombineOptsDefault = '-64 -h 16384 -m'
      if ( $echoOn ) unset echo
      echo "WARNING: mppnccombineOptString not found, defaulting to '$mppnccombineOptsDefault'"
      if ( $echoOn ) set echo
      set -r mppnccombineOptString = "$mppnccombineOptsDefault"
    endif

  else if ( $# > 0 ) then

    alias getopt `which getopt` --shell=tcsh --unquote

    set argv = ( `getopt 'x:P:T:d:t:D:E:F:' $*` )
    set argvStatus = $status

    set expName = ""
    set xmlFile = ""
    set platform = ""
    set target = ""
    set firstDate = ""
    set freVersion = ""

    while ( 1 )
      switch ( $argv[1] )
	case --:
	  shift argv; break;
	case -x:
	  set xmlFile = $argv[2]; shift argv; breaksw;
	case -P:
	  set platform = $argv[2]; shift argv; breaksw;
	case -T:
	  set target = $argv[2]; shift argv; breaksw;
	case -t:
	  set firstDate = $argv[2]; shift argv; breaksw;
	case -F:
	  set freVersion = $argv[2]; shift argv; breaksw;
	default:
	  if ( $echoOn ) unset echo
	  echo "*ERROR*: System error"
	  if ( $echoOn ) set echo
	  exit 1
      endsw
      shift argv
    end

    if ( $argvStatus || $#argv != 1 ) then
      if ( $echoOn ) unset echo
      echo "*ERROR*: Invalid options or not a single experiment name on a command line..."
      if ( $echoOn ) set echo
      set -r commandLineError
    else
      set -r expName = $argv[1]
      set -r xmlFile = $xmlFile
      set -r platform = $platform
      set -r target = $target
      set -r firstDate = $firstDate
      set -r freVersion = $freVersion
    endif

    unset argvStatus
    unset argv

  else

    set -r commandLineError

  endif

  if ( $?commandLineError ) then

    if ( $echoOn ) unset echo
    echo "Usage: $0:t [options] experiment"
    echo "  -x STRING - XML file absolute pathname STRING"
    echo "  -P STRING - platform STRING"
    echo "  -T STRING - target STRING"
    echo "  -t STRING - first date STRING"
    echo "  -F STRING - use freVersion STRING to extract platform csh section"
    if ( $echoOn ) set echo

    exit 1

  endif

################################################################################
#----------------------------- environment setup -------------------------------
################################################################################

  # Use the freVersion to extract the platfrom/csh section.
  if ( $echoOn ) unset echo
  csh -c "source ${MODULESHOME}/init/csh; module load fre-commands/${freVersion}; frelist --platform=${platform} --target=${target} --platform-csh --xmlfile=${xmlFile}" | source /dev/stdin
  if ( $status != 0 ) then
    echo "*ERROR*: Unable to extract //setup/platform[@name='${platform}'/csh section form xml '${xmlFile}'"
    exit 1
  endif
  if ( $echoOn ) set echo

  # Get the archive directory using frelist, and verify it
  # exists and is a directory
  set -r dir = "`frelist --directory=archive --platform=${platform} --target=${target} --xmlfile=${xmlFile} ${expName}`/history"
  if ( $status != 0 ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: Unable to determine the archive directory for experiment '${expName}' in xml '${xmlFile}'"
    if ( $echoOn ) set echo
    exit 1
  else if ( ! -d ${dir} ) then
    if ( $echoOn ) unset echo
    echo "*ERROR*: Archive directory '${dir}' does not exist or isn't a directory"
    if ( $echoOn ) set echo
    exit 1
  endif

################################################################################
#------------------------ global constants and aliases -------------------------
################################################################################

  alias pp `which frepp` -v -c split -s --mppnccombine-opts=\'$mppnccombineOptString\'

################################################################################
#--------------------------- the post-processor call ---------------------------
################################################################################

  if ( ! $echoOn ) set echo

  pp -D -x $xmlFile -P $platform -T $target -d $dir -t $firstDate $expName

  if ( $status == 0 ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : The post-processor has been started successfully"
    if ( $echoOn ) set echo
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: Can't start the post-processor"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( ! $echoOn ) unset echo

################################################################################
#----------------------------- normal end of script ----------------------------
################################################################################

  set -r runtimeEnd = `date "+%s"`
  set -r runtime = `echo "$runtimeEnd - $runtimeBeg" | bc -l`

  if ( $echoOn ) unset echo
  echo "<NOTE> : Finishing on `date`"
  echo "<NOTE> : Runtime = '$runtime' (seconds)"
  echo "<NOTE> : Natural end of the post-processing starter script for '$expName'"
  if ( $echoOn ) set echo

  exit 0
