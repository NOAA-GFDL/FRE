#!/bin/csh -f
#PBS -j oe

# combines multiprocessor history file output and sends to GFDL
# usage : combine_hist $datedir $project
#         or
#         qsub combine_hist -v datedir=$datedir,project=$project,stdout=$stdoutdir

# data must be of this form: $tmpbase/$USER/subdirs/expt/history/datedir/histfiles
# ie, datedir = /lustre/scratch/alangenh/cubed_sphere/history/19811001

#available variables to be passed with msub -v:
# datedir = dir containing uncombined files (required)
# project = scheduler project (default: none)
# stdout = dir to write stdout files to (default: .)
# frepp = a frepp command to run at gfdl (default: none)
# platform = the ncrc platform that the current run is using (default: ncrc.default)
# combine = type of combine. Currently supported: staged
#                       to be implemented later: deferred/offline, off, test
# transfer = whether to transfer output to gfdl (default: 1)
# check = whether to check dual run output (default: 0)

  echo ====== FRESAVEHIST ======
  unalias *
  set beginruntime = `date "+%s"`

  if ( ! $?datedir ) then
    set datedir = ""
    if ( $?1 ) then
      set datedir = $1
    endif
  endif

set project = ""
#  if ( ! $?project ) then
#    set project = ""
#    if ( $?2 ) then
#      set project = "-A $2"
#    endif
#  else
#    set project = "-A $project"
#  endif

  set stdoutopt = ''
  set stdoutxml = ''
  set sendjobH = `echo $PBS_JOBNAME | sed 's/output_stager/file_sender.H/'`
  set sendjobX = `echo $PBS_JOBNAME | sed 's/output_stager/file_sender.X/'`
  if ( $?stdout ) then
    set stdoutopt = "-N $sendjobH -o $stdout/$sendjobH"
    set stdoutxml = "-N $sendjobX -o $stdout/$sendjobX"
  else
    set stdoutopt = "-N $sendjobH -o ./$sendjobH"
    set stdoutxml = "-N $sendjobX -o ./$sendjobX"
    set stdout = $PBS_O_WORKDIR
  endif

  set freppcmd = ''
  if ( $?frepp ) then
    set freppcmd = `echo $frepp | tr "'" " "`
  endif
  
  if ( ! $?platform ) then
    set platform = 'ncrc.default'
  endif

  if ( ! $?transfer ) then
    set transfer = 1
  endif

  if ( ! $?combine ) then
    set combine = 'staged'
  endif

  if ( `echo $HOST | grep -c gaea-ldtn` ) then
    set machine = 'ldtn'
  else if ( `echo $HOST | grep -c c1ms-batch` ) then
    set machine = 'c1ms'
  else
    echo "ERROR: combine on $HOST not supported, try c1ms or ldtn."
    exit 1
  endif

  if ( ! $?check) then
    set check = 0
  endif

  set fremodule = 'fre'
  if ( $?freversion ) then
  if ( "$?freversion" != '' ) then
    set fremodule = "fre/$freversion"
  endif
  endif

  set send_file = `which send_file`
  if ( ! -f "$send_file" ) then
    unset echo
    source $MODULESHOME/init/csh
    module use -a /ncrc/home2/fms/local/modulefiles
    module load $fremodule
    module list
    set echo
    set send_file = `which send_file`
  endif
########################################################################
#------------------------ default variables ----------------------------
########################################################################
#mppnccombine command 
  if ( "$machine" == 'ldtn' ) then
    set mppnccombine = `which mppnccombine_ldtn`" -64 -h 16384"
  else if ( "$machine" == 'c1ms' ) then
    set mppnccombine = `which mppnccombine_mpi`" -64 -h 16384"
  endif
#qsub/msub command
  alias submit "msub -V -q eslogin $project"

########################################################################
#---------- only highly premeditated user changes below here -----------
########################################################################

echo ===================================================================
echo mppnccombine=$mppnccombine
echo send_file=$send_file
echo PBS_O_WORKDIR/=$PBS_O_WORKDIR/
echo datedir=$datedir
echo project=$project
echo stdoutopt=$stdoutopt
echo submit=`which submit`
echo host=`hostname`
echo ===================================================================

if ( ! -d "$datedir" ) then
   echo "ERROR: datedir '$datedir' is not a directory"
   echo "ERROR: Please provide datedir as a command line argument"
   exit 1
endif

if ( $?PBS_JOBID ) then
 chmod 644 $PBS_O_WORKDIR/$PBS_JOBID.OU
endif

set echo

set begindate = $datedir:t
set name = `echo $datedir | tr '/' '\t' | cut -f 5`
echo HOST $HOST $HOSTNAME
cd $datedir
set time=2

#COMBINE HISTORY FILES

if ( "$machine" == "c1ms") then

 foreach diagoutput (`ls -1 | egrep ".nc.[0-9][0-9][0-9][0-9]" | sed 's/\.[0-9][0-9][0-9][0-9]//g' | sort -u`)
   sleep 1
   set first = `ls -1 | egrep "$diagoutput.[0-9][0-9][0-9][0-9]" | head -1 | awk -F . '{print $NF}' `
   sleep 1
   set last = `ls -1 | egrep "$diagoutput.[0-9][0-9][0-9][0-9]" | tail -1 | awk -F . '{print $NF}' `
   echo aprun -n 1 -N 1 $mppnccombine -r -n $first -e $last $diagoutput
   aprun -n 1 -N 1 $mppnccombine -r -n $first -e $last $diagoutput &
 end

else if ( "$machine" == "ldtn") then 
 
 set count = 0
 foreach diagoutput (`ls -1 | egrep ".nc.[0-9][0-9][0-9][0-9]" | sed 's/\.[0-9][0-9][0-9][0-9]//g' | sort -u`)
   sleep 1
   set first = `ls -1 | egrep "$diagoutput.[0-9][0-9][0-9][0-9]" | head -1 | awk -F . '{print $NF}' `
   sleep 1
   set last = `ls -1 | egrep "$diagoutput.[0-9][0-9][0-9][0-9]" | tail -1 | awk -F . '{print $NF}' `
   $mppnccombine -r -n $first -e $last $diagoutput &
   set count = `expr $count + 1`
   if ($count == 8) then
     wait
     set count = 0
   endif
 end

endif

wait

#MAKE SURE THEY ARE ALL COMBINED
set numpefiles = `ls -1 | egrep ".nc.[0-9][0-9][0-9][0-9]" | wc -l`
if ( $numpefiles != 0 ) then
  echo ERROR: mppnccombine failed, there are still uncombined files
  exit 1
endif

#ADD DATE STAMP
unset echo
foreach file ( `ls -1 | egrep ".nc"'$'` )
   mv $file $begindate.$file
end
set echo

#CREATE TAR ARCHIVE
set files = ( `ls -1 | egrep ".nc"'$'` )
if ( $#files > 0 ) then
   set arfile = $begindate.nc.tar
   echo $files | tr ' ' '\n' > ./tarinput
   if ( "$machine" == "c1ms") then
     aprun -n 1 -N 1 tar -b 1000 -cf $arfile -T tarinput
   else
     tar -b 1000 -cf $arfile -T tarinput
   endif
   rm tarinput
   if ( -s $arfile ) then
     find $datedir -type f -maxdepth 1 -regex '.*.nc' -exec rm {} \;
   else
     echo ERROR: tar file does not exist or has zero size: $arfile
     exit 1
   endif
else
   echo ERROR: no history files after combine step
   exit 1
endif

mv $arfile ..
cd ..
rmdir $datedir

unsetenv PBS_SERVER

#CALL FREPP     

if ( "$freppcmd" != '' ) then

   #add corresponding platform
   set gfdlplatform = "gfdl."`echo $platform | sed 's/.*\.//'`
   set freppcmd = (`echo $freppcmd | sed "s, , -P $gfdlplatform ,"`)

   #extract version of frepp, don't use full path to frepp
   set freppcmd = ("frepp" `echo $freppcmd | cut -d' ' -f 2-`)

   #use xml file copied from ncrc
   set tmplist = (`echo $freppcmd | sed 's/.* -x //'`)
   set xmlfile = $tmplist[1]

   pushd $stdout
   submit $stdoutxml -v file=$xmlfile $send_file
   popd

   set outpath = `echo $xmlfile | perl -pe "s/.*?$USER\///" | perl -pe '/\// ? s/(.*)\/.*/$1/ : s/.*/./'`
   set rxmlfile = /archive/$USER/$outpath/$xmlfile:t
   set freppcmd = (`echo $freppcmd | sed "s,$xmlfile,$rxmlfile,"`)

   #specify the appropriate history directory
   set outpath = `echo $datedir | perl -pe "s/.*?$USER\///" | perl -pe '/\// ? s/(.*)\/.*/$1/ : s/.*/./'`
   set rhistdir = /archive/$USER/$outpath
   set freppcmd = (`echo $freppcmd | sed "s,-d \S* ,-d $rhistdir ,"`)
   echo $freppcmd

   set ppjobname = `echo $PBS_JOBNAME | sed 's/output_stager/frepp/'`
   cp $FRE_COMMANDS_HOME/site/ncrc/pptemplate.csh $stdout/$ppjobname
   perl -pi -e "s/frepptest/$ppjobname/" $stdout/$ppjobname

   echo "#$gfdlplatform platform csh" >> $stdout/$ppjobname
   xpath.pl -x $xmlfile -e 'setup/platform[@name="'$gfdlplatform'"]/csh' >> $stdout/$ppjobname

   echo "set echo" >> $stdout/$ppjobname
   echo "$freppcmd" >> $stdout/$ppjobname

endif

#SEND HISTORY FILE TO GFDL

pushd $stdout
if ( $transfer && "$freppcmd" != '' ) then
  submit $stdoutopt -v file=$datedir:h/$arfile,remotejob=$stdout/$ppjobname $send_file
else if ( $transfer ) then
  submit $stdoutopt -v file=$datedir:h/$arfile $send_file
endif
popd

#EVALUATE DUAL RUNS

if ( $check ) then

 pushd ..
 set myarchivedir = `basename $cwd`
 popd
 if ( `echo $myarchivedir | egrep -c '^[0-9]+''$'` ) then
 if ( -f ../../history/$arfile ) then
    ls -1 $arfile ../../history/$arfile | ardiff
    if ( $status ) then
      Mail -s "DUAL RUN FAILURE" $USER <<END
These two history files do not match:

cd $cwd
ls -1 $arfile ../../history/$arfile | ardiff
END
       echo "FAILED: $arfile" >> ../dualRuns.log 
    else
       echo "passed: $arfile" >> ../dualRuns.log 
    endif
 endif
 endif

endif

#END OF SCRIPT

unset echo
set endruntime = `date "+%s"`
set ttlruntime = `echo "$endruntime - $beginruntime" | bc -l`
echo "beginruntime $beginruntime endruntime $endruntime ttlruntime $ttlruntime"
echo end_of_run
echo "NOTE: Natural end-of-script for combine_$begindate."

