#!/bin/csh -f
#PBS -N get_file
#PBS -j oe
#PBS -l walltime=16:00:00,size=1
#PBS -o get_file.$PBS_JOBID
#PBS -q eslogin
#PBS -l partition=es
#PBS -r y

  echo ====== GET_FILE ======
  echo "Starting on `date`"
  echo "Starting on host '$HOST', hostname '$HOSTNAME'"
  unalias *
  set beginruntime = `date "+%s"`

#get command line options for interactive usage
  set argv = (`getopt hiqd $*`)
#---------------------------------------------------
  while ("$argv[1]" != "--")
      switch ($argv[1])
          case -h:
              set help; breaksw
          case -i:
              set interactive; breaksw
          case -q:
              set quiet; breaksw
          case -d:
              set direct; breaksw
      endsw
      shift argv
  end
  shift argv
#---------------------------------------------------

  if ( ! $?file && ! $?help ) then
    set file = ""
    if ( "$?argv" && "$argv" != '' ) then
      set file = $argv[1]
    else
      echo "ERROR: missing filename"
      set help
    endif
  endif

  if ( $?help ) then
    cat << EOF

    Name:  get_file

Synopsis:  get a file from GFDL filesystems to Gaea's /lustre/ltfs/scratch/\$USER
           space. This script currently must be run from the login nodes.
           
           The file's path will be translated to the Gaea path as follows:
              
              /archive/username
              /home/username
              /work/username

           will be translated to

              /lustre/ltfs/scratch/\$USER

           and the remaining portion of the filename will be replicated.  For example,

              get_file /archive/username/fms/testing/fileA

           will move the file to

              /lustre/ltfs/scratch/\$USER/fms/testing/fileA

           Note that send_file will alter the platform portion of filenames to aid in
           transferring FRE files between sites unless you use the -d option.

   Usage:  get_file filename

              The filename can use the relative or full path.
              This will submit a batch job to get the file.

           get_file -i filename OR get_file -i -q filename

              This will get the file interactively instead of in batch.  Adding -q (quiet)
              will print fewer messages to the screen during the transfer.

           get_file -d filename

              "direct": prevent get_file from translating portions of the path like
              gfdl.ncrc2-default-prod-openmp -> ncrc2.default-prod-openmp

EOF
    exit 1
  endif

  setenv X509_USER_PROXY "$HOME/.x509_user_proxy"
  test -f $X509_USER_PROXY || \
   echo "WARNING: X509_USER_PROXY file $X509_USER_PROXY does not exist... \
           certificate-based transfers may not work."

#make sure FRE is loaded
  test $?MODULESHOME -eq 0 && setenv MODULESHOME /opt/modules/3.2.6.6
  source $MODULESHOME/init/csh
  if ( ! $?FRE_COMMANDS_HOME ) then
     module rm fre
     if ( $?freversion ) then   # can set via msub -v
        module load fre/$freversion
     else
        echo "NOTE: FRE not loaded in this shell, executing 'module load fre'"
        module load fre
     endif
  endif 

#make sure globus is loaded
  set globusavail = `$MODULESHOME/bin/modulecmd tcsh avail globus |& grep -c 'globus/'`
  if ( $globusavail ) then
    module load globus
  else
    test $?GLOBUS_LOCATION -eq 0 && setenv GLOBUS_LOCATION /sw/xt6/globus/default
    source $GLOBUS_LOCATION/etc/globus-user-env.csh 
  endif

#parse paths
  set firstchar = `echo $file | cut -c1`
  if ( "$firstchar" != "/" ) then
     echo ERROR: You must use the full GFDL pathname, not a relative one.
     exit 1
  endif

#detect where you are on gaea, either /ncrc/... or /lustre/...
  set fs = `echo $file |cut -f2 -d/`
  if( ! ( "$fs" == "archive" || "$fs" == "home" || "$fs" == "work") )then
     echo "ERROR: The file must be in /archive, /home, or /work at GFDL. ($fs)"
     exit 1
  endif

  set u = `echo $file |cut -d/ -f3`
  set f = `echo $file |cut -d/ -f4-`
  
  set inpath = $f:h
  set filename = $f:t
  if ( `echo $f | grep -c '/'` == 0 ) then
     set inpath = ''
  else 
     set inpath = "$inpath/"
  endif

  set outpath = $inpath
  if ( ! $?direct ) then
     set outpath = `echo $outpath | sed 's:\(.\+\)\/gfdl\.\(ncrc[1-2]\?\)-\(.\+\):\1\/\2\.\3:'`
  endif

  echo "Getting /$fs/$u/$inpath$filename"
  echo "Writing to /lustre/f1/unswept/$USER/$outpath"

  if ( $?PBS_JOBID ) then
    #if ( -f $PBS_O_WORKDIR/$PBS_JOBID.OU ) then
    #  chmod 644 $PBS_O_WORKDIR/$PBS_JOBID.OU
    #endif
  else
    if ( ! $?interactive ) then
      set freversion = `echo $LOADEDMODULES | tr ':' '\n' | egrep '^fre/.+' | sed 's,^fre/,,'`
      msub -v file=/$fs/$u/$inpath$filename,freversion=$freversion $0
      exit $status
    endif
  endif

#get file with gcp
  mkdir -p /lustre/f1/unswept/$USER/$outpath
  if ( $status ) then
    unset echo
    echo "ERROR: Unable to create destination directory '/lustre/f1/unswept/$USER/$outpath'"
    echo "       get_file can only be run from the login nodes."
    exit 1
  endif
  cd /lustre/f1/unswept/$USER/$outpath

  unset echo
  set gcp = `which gcp`
  if ( ! -f "$gcp" ) then
     echo "ERROR: gcp not found: '$gcp'"
     exit 1
  endif

  set verbosity = ""
  if ( ! $?quiet ) then
     set verbosity = " -d"
     echo ' '
  endif

  echo "Running '$gcp$verbosity gfdl:$file .'"
  $gcp $verbosity gfdl:$file .
  set tmpstatus = $status
  if ( $tmpstatus != 0 ) then
    unset echo
    echo "ERROR: in gcp ($tmpstatus)"
    exit $tmpstatus
  endif

  set endruntime = `date "+%s"`
  set ttlruntime = `echo "$endruntime - $beginruntime" | bc -l`
  echo Finished successfully in $ttlruntime seconds.
  exit 0

