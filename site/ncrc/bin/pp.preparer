#!/bin/csh -fx
# 
# $Id: pp.preparer,v 1.1.2.5 2011/08/22 01:15:06 afy Exp $
# ------------------------------------------------------------------------------
# FMS/FRE Project: Post-Processing Preparer - NCRC Version
# ------------------------------------------------------------------------------
# afy    Ver   1.00  Initial version                                June 11
# afy    Ver   2.00  Allow non-existent arguments                   June 11
# afy    Ver   2.01  Don't print the module list                    June 11
# afy    Ver   3.00  Rename arguments xmlFile* => xmlFilesList*     July 11
# afy    Ver   3.01  Transfer multi-part XML files                  July 11
# afy    Ver   3.02  Rename argument PATH => FRE_PATH               July 11
# afy    Ver   3.03  Prepend the PATH with the FRE_PATH argument    July 11
# afy    Ver   3.04  Don't use the HOSTNAME variable                July 11
# afy    Ver   4.00  Add 'argFile' argument and its processing      July 11
# afy    Ver   4.01  Rename 'FRE_PATH' => 'userPath'                July 11
# afy    Ver   5.00  Fixes for online mode                          August 11
# afy    Ver   5.01  Add trailing slash to gcp calls                August 11
# afy    Ver   5.02  Use the argument file in all calling modes     August 11
# afy    Ver   5.03  Add 'gcpExecutable' argument                   August 11
# afy    Ver   5.04  Remove 'userPath' argument (!!!)               August 11
# afy    Ver   5.05  Standardize message levels                     August 11
# afy    Ver   5.06  Add module 'globus' loading (!!!)              August 11
# ------------------------------------------------------------------------------
# Copyright (C) NOAA Geophysical Fluid Dynamics Laboratory, 2000-2011
# Designed and written by V. Balaji, Amy Langenhorst and Aleksey Yakovlev
#

  set -r echoOn = $?echo
  set -r runtimeBeg = `date "+%s"`

  if ( $echoOn ) unset echo
  echo "<NOTE> : ====== FRE POST-PROCESSING PREPARER ======"
  echo "<NOTE> : Starting at $HOST on `date`"
  if ( $echoOn ) set echo

  unalias *

  # ---------------- initialize environment modules

  if ( $echoOn ) unset echo
  source $MODULESHOME/init/tcsh
  module load globus
  if ( $echoOn ) set echo

  # ---------------- define constants depending on the run type

  if ( $?PBS_ENVIRONMENT ) then
    if ( $PBS_ENVIRONMENT == 'PBS_BATCH' ) then
      set -r jobName = $PBS_JOBNAME.o`echo $PBS_JOBID | sed -r 's/^([0-9]+).*$/\1/'`
      set -r batch
    else
      set -r jobName = $0:t.o`date +%s`
    endif
  else
    set -r jobName = $0:t.o`date +%s`
  endif

################################################################################
#------------------------- arguments initialization ----------------------------
################################################################################

  set expName = ""
  set xmlFiles = ( )
  set xmlFilesRemote = ( )
  set stdoutDirRemote = ""
  set gcpExecutable = ""

################################################################################
#-------------------- argument file checkup and sourcing -----------------------
################################################################################

  if ( $?batch && $# == 0 ) then
    if ( $?argFile ) then
      if ( $argFile != "" ) then
        set -r argFile = $argFile
      else
	if ( $echoOn ) unset echo
	echo "*ERROR*: The argument 'argFile' value is empty"
	if ( $echoOn ) set echo
	exit 1
      endif
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument 'argFile' is not defined"
      if ( $echoOn ) set echo
      exit 1
    endif
  else if ( $# == 1 ) then
    if ( $1 != "" ) then
      set -r argFile = $1
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The argument value is empty"
      if ( $echoOn ) set echo
      exit 1
    endif
  else
    if ( $echoOn ) unset echo
    echo "Usage: $0:t argFile"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( -f $argFile && -r $argFile ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : Using the argFile '$argFile'..."
    if ( $echoOn ) set echo
    source $argFile
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The argFile '$argFile' doesn't exist or not readable"
    if ( $echoOn ) set echo
    exit 1
  endif

################################################################################
#----------------------------- arguments checkup -------------------------------
################################################################################

  if ( $expName != "" ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : expName = '$expName'"
    if ( $echoOn ) set echo
    set -r expName = $expName
  else
    if ( $echoOn ) unset echo
    echo "WARNING: Not using the 'expName' argument"
    if ( $echoOn ) set echo
  endif

  if ( $#xmlFiles > 0 ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : xmlFiles = '$xmlFiles'"
    if ( $echoOn ) set echo
    set -r xmlFiles = ( $xmlFiles )
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The 'xmlFiles' argument is not defined or empty"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( $#xmlFilesRemote > 0 ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : xmlFilesRemote = '$xmlFilesRemote'"
    if ( $echoOn ) set echo
    set -r xmlFilesRemote = ( $xmlFilesRemote )
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The 'xmlFilesRemote' argument is not defined"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( $stdoutDirRemote != "" ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : stdoutDirRemote = '$stdoutDirRemote'"
    if ( $echoOn ) set echo
    set -r stdoutDirRemote = $stdoutDirRemote
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The 'stdoutDirRemote' argument is not defined"
    if ( $echoOn ) set echo
    exit 1
  endif

  if ( $gcpExecutable != "" ) then
    if ( -f $gcpExecutable && -r $gcpExecutable ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : gcpExecutable = '$gcpExecutable'"
      if ( $echoOn ) set echo
      set -r gcpExecutable = $gcpExecutable
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: The 'gcp' executable '$gcpExecutable' doesn't exist or not readable"
      if ( $echoOn ) set echo
      exit 1
    endif
  else if ( $?GCP ) then
    if ( $echoOn ) unset echo
    echo "<NOTE> : gcpExecutable = '$GCP'"
    if ( $echoOn ) set echo
    set -r gcpExecutable = $GCP
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The 'gcp' executable is not defined"
    if ( $echoOn ) set echo
    exit 1
  endif

################################################################################
#------------------------ global constants and aliases -------------------------
################################################################################

  alias gcp $gcpExecutable --verbose --how rsync --create-dirs

################################################################################
#---------------------- remote stdout directory creation -----------------------
################################################################################

  set dummyFile = /tmp/dummy.txt.$jobName
  echo "dummy" >> $dummyFile

  if ( $status == 0 ) then
    gcp $dummyFile gfdl:$stdoutDirRemote/
    if ( $status == 0 ) then
      if ( $echoOn ) unset echo
      echo "<NOTE> : The remote directory '$stdoutDirRemote' has been created successfully"
      if ( $echoOn ) set echo
      rm -f $dummyFile
    else
      if ( $echoOn ) unset echo
      echo "*ERROR*: Can't create the remote directory '$stdoutDirRemote'"
      if ( $echoOn ) set echo
      rm -f $dummyFile
      exit 1
    endif
  else
    if ( $echoOn ) unset echo
    echo "*ERROR*: The file '$dummyFile' can't be created"
    if ( $echoOn ) set echo
    exit 1
  endif

  unset dummyFile

################################################################################
#------------------------------ XML files copying ------------------------------
################################################################################

  if ( $#xmlFiles == $#xmlFilesRemote ) then

    @ inx = 1

    while ( $inx <= $#xmlFiles )

      set xmlFile = $xmlFiles[$inx]
      set xmlFileRemote = $xmlFilesRemote[$inx]

      if ( -f $xmlFile && -r $xmlFile ) then
	gcp $xmlFile gfdl:$xmlFileRemote:h/
	if ( $status == 0 ) then
	  if ( $echoOn ) unset echo
	  echo "<NOTE> : The XML file '$xmlFile' has been copied to the remote XML file '$xmlFileRemote' successfully"
	  if ( $echoOn ) set echo
	else
	  if ( $echoOn ) unset echo
	  echo "*ERROR*: Can't copy the XML file '$xmlFile' to GFDL"
	  if ( $echoOn ) set echo
	  exit 1
	endif
      else
	if ( $echoOn ) unset echo
	echo "*ERROR*: The file '$xmlFile' doesn't exist or not readable"
	if ( $echoOn ) set echo
	exit 1
      endif

      unset xmlFileRemote
      unset xmlFile
      @ inx++

    end

    unset inx 

  else

    if ( $echoOn ) unset echo
    echo "*ERROR*: Lists '$xmlFiles' and '$xmlFilesRemote' must have the same length"
    if ( $echoOn ) set echo
    exit 1

  endif

################################################################################
#----------------------------- normal end of script ----------------------------
################################################################################

  rm -f $argFile

  set -r runtimeEnd = `date "+%s"`
  set -r runtime = `echo "$runtimeEnd - $runtimeBeg" | bc -l`

  if ( $echoOn ) unset echo
  echo "<NOTE> : Finishing on `date`"
  echo "<NOTE> : Runtime = '$runtime' (seconds)"
  echo "<NOTE> : Natural end of pp preparer for '$expName'"
  if ( $echoOn ) set echo

  exit 0
