#!/bin/bash

# Evaluate TAP output to determine if a test failed or passed.
#
# This function assumes the tapFile has a name of <test>.<extension>
# where <test> is the name of the test suite, and will be used in 
# the messages printed to the screen.
#
# evalTAP "tapFile"
evalTAP () {
   local tapFile=$1

   local testName=${tapFilei%.*}

   # Default return value
   local myReturn=0

   tap_fail=$( grep 'not ok' $tapFile )
   if [ 'X' = "X$tap_fail" ]; then
      echo "${testName} tests passed" 1>&2
      myReturn=0
   else
      echo "${testName} tests failed:" 1>&2
      echo "$tap_fail" 1>&2
      myReturn=1
   fi

   echo $myReturn
}

case $FRE_SYSTEM_SITE in
	gfdl )
		PATH=$PATH:/home/sdu/opt/bats/bin
		;;
	gfdl-ws )
		PATH=$PATH:/home/sdu/opt/bats/bin
		;;
        theia )
                PATH=${PATH}:/home/Seth.Underwood/opt/bats/0.4.0/bin
                ;;
	ncrc3 )
		PATH=$PATH:/ncrc/home2/Seth.Underwood/opt/bats/0.4.0/bin
		;;
	ncrc4 )
		PATH=$PATH:/ncrc/home2/Seth.Underwood/opt/bats/0.4.0/bin
		;;
esac

export PATH

cd xml

myExit=0

for frecmd in fre{list,make,run,pp}; do
	command="bats -t ../${frecmd}.bats"
	echo $command
	$command | tee ${frecmd}.tap 2>&1
	myExit=$(expr $myExit + $( evalTAP ${frecmd}.tap ))
	rm -f ${frecmd}.tap
	echo
done

cd ..

exit $myExit
